# 🐕 Module 4: Generate Agent Code

You’ve used the AI Toolkit (AITK) so far to quickly prototype and test your agent’s behavior.
Now, it’s time to move from a low-code prototype to a code-first workflow — giving you full control over your agent’s logic, structure, and integration.

Generating agent code allows you to:
- Extend and customize the agent’s behavior beyond the AITK UI.
- Add features, APIs, and new data connections directly in code.
- Collaborate through Git and version your agent like any other software project.

## 🧩 Instructions

1. TBD
1. TBD
1. TBD
1. TBD

## 🔍 What’s Happening

The AI Toolkit’s prototype definitions are now being translated into executable code.
This marks a key transition:

- The AI Toolkit was ideal for prototyping — testing logic, tuning behavior, and exploring ideas quickly.
- The code-first workflow empowers you to develop, debug, and extend your agent using standard development practices.

You now have full flexibility to:
- Integrate APIs or additional MCP servers.
- Add new commands and data flows.
- Deploy or share your agent with your team.

## ✅ Checkpoint

You should have a Pet Planner agent file (e..g `src/pet-planner-agent.python`) that runs successfully.

## 🐾 Next Step

Continue to [Trace Agent Responses](/Workshops/PetPlanner/Modules/05-trace-agent-respones.md)